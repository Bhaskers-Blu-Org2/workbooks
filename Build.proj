<Project
  xmlns="http://schemas.microsoft.com/developer/msbuild/2003"
  DefaultTargets="Build"
  ToolsVersion="12.0">
  <Import Project="$(MSBuildThisFileDirectory)build\Environment.props"/>
  <Import Project="$(MSBuildThisFileDirectory)build\Xamarin.Build\Xamarin.Build.targets"/>
  <Import Project="$(MSBuildThisFileDirectory)build\Utility.targets"/>

  <Import
    Project="$(MSBuildThisFileDirectory)build\Local.props"
    Condition="Exists('$(MSBuildThisFileDirectory)build\Local.props')"/>

  <PropertyGroup>
    <SolutionPlatform Condition="'$(OS)' == 'Windows_NT'">Windows</SolutionPlatform>
    <SolutionPlatform Condition="'$(OS)' == 'Unix'">macOS</SolutionPlatform>
  </PropertyGroup>

  <!-- External Tools -->
  <PropertyGroup Condition="'$(SolutionPlatform)' == 'Windows'">
    <WrenchAdb>C:\Users\builder\AppData\Local\Android\android-sdk\platform-tools\adb.exe</WrenchAdb>
    <SevenZip>C:\Program Files\7-zip\7z.exe</SevenZip>
  </PropertyGroup>

  <ItemGroup>
    <WhichSearchPath Include="$(MSBuildThisFileDirectory)"/>
    <WhichSearchPath Include="$(Provisionator_ArtifactCachePath)"/>
  </ItemGroup>

  <!-- General Configuration -->
  <PropertyGroup>
    <Configuration Condition="'$(Configuration)' == ''">Debug</Configuration>
    <MSBuildCommonProperties>
      $(MSBuildCommonProperties);
      Configuration=$(Configuration);
      Profile=Desktop;
      HaveXamarinIos=true;
      HaveXamarinAndroid=true;
    </MSBuildCommonProperties>

    <MSBuildCommonProperties Condition="'$(SolutionPlatform)' == 'macOS'">
      $(MSBuildCommonProperties);
      HaveXamarinMac=true;
    </MSBuildCommonProperties>

    <PackageOutputDir Condition="'$(PackageOutputDir)' == ''">_artifacts\</PackageOutputDir>
    <InspectorNuGetPackageBuildDir>_inspectorPackage</InspectorNuGetPackageBuildDir>
    <InspectorNuGetPackageContentDir>$(InspectorNuGetPackageBuildDir)\contentFiles\any\any\</InspectorNuGetPackageContentDir>

    <BuildInfoDistFile>Package/buildinfo</BuildInfoDistFile>
  </PropertyGroup>

  <!-- Platform Specific Configuration -->
  <PropertyGroup Condition="'$(SolutionPlatform)' == 'Windows'">
    <UpdateInfoFile>Package\Windows\updateinfo</UpdateInfoFile>
    <InspectorPackageName>Xamarin.Inspector.Windows</InspectorPackageName>
    <InspectorPackageNuspec>Package\Windows\$(InspectorPackageName).nuspec</InspectorPackageNuspec>
  </PropertyGroup>
  <PropertyGroup Condition="'$(SolutionPlatform)' == 'macOS'">
    <UpdateInfoFile>Clients\Xamarin.Interactive.Client.Mac\PackageAssets\updateinfo</UpdateInfoFile>
  </PropertyGroup>

  <!-- XVS mac build host configuration (in VSTS) -->
  <PropertyGroup Condition="'$(TF_BUILD)' == 'True'">
    <MacBuildHostAddress Condition="'$(AGENT_NAME)' == 'RE Cambridge Windows-Inspector-1'">bockover-1.guest.corp.microsoft.com</MacBuildHostAddress>
    <MacBuildHostAddress Condition="'$(AGENT_NAME)' == 'Cambridge Windows-Inspector-2'">inspector-1.guest.corp.microsoft.com</MacBuildHostAddress>
    <MacBuildHostUser>builder</MacBuildHostUser>
  </PropertyGroup>

  <PropertyGroup>
    <WorkbooksIntegrationNuGetPackageVersion>1.0.0-rc6</WorkbooksIntegrationNuGetPackageVersion>
  </PropertyGroup>

  <Target Name="ProvisioningCheck">
    <CallTarget
      Condition=" '$(Provisionator)' != '' "
      Targets="_ProvisioningCheck"/>
  </Target>

  <Target Name="Build" DependsOnTargets="ProvisioningCheck;UpdateInvertedDependencies">
    <MSBuild
      Condition="'$(SolutionPlatform)' == 'macOS'"
      Projects="$(MSBuildProjectFile)"
      Targets="_BuildMac"/>
    <MSBuild
      Projects="$(MSBuildProjectFile)"
      Targets="_BuildWin;GenerateSignFiles;_KillWrenchAdbServer"
      RunEachTargetSeparately="true"
      Condition="'$(SolutionPlatform)' == 'Windows'"/>
  </Target>

  <Target Name="_BuildMac">
    <Exec Command="xcrun -k"/>
    <MSBuild
      BuildInParallel="true"
      Projects="CoreBuild.proj"
      Properties="$(MSBuildCommonProperties)"
      Targets="Restore;Build"/>
  </Target>

  <Target Name="_BuildWin">
    <MSBuild
      BuildInParallel="true"
      Projects="CoreBuild.proj"
      Properties="$(MSBuildCommonProperties);ServerAddress=$(MacBuildHostAddress);ServerUser=$(MacBuildHostUser)"
      Targets="Restore;Build"/>
  </Target>

  <Target Name="_KillWrenchAdbServer">
    <Exec
      Command="$(WrenchAdb) kill-server"
      Condition="Exists('$(WrenchAdb)')"/>
  </Target>

  <Target
    Name="Package">
    <MSBuild
      Projects="CoreBuild.proj"
      Targets="Package;ArchiveSymbolFiles"
      Properties="$(MSBuildCommonProperties)"/>
    <Copy
      SkipUnchangedFiles="true"
      SourceFiles="$(UpdateInfoFile)"
      DestinationFolder="$(PackageOutputDir)"/>
    <Message Text="Generated $(PackageOutputDir)updateinfo" Importance="high"/>
    <Copy
      SkipUnchangedFiles="true"
      SourceFiles="$(BuildInfoDistFile)"
      DestinationFolder="$(PackageOutputDir)"/>
    <Message Text="Generated $(PackageOutputDir)buildinfo" Importance="high"/>
    <CallTarget Targets="_PackageInspectorNuGetWin" Condition="'$(SolutionPlatform)' == 'Windows'"/>
    <CallTarget Targets="GenerateReleaseNotes" Condition="'$(SolutionPlatform)' == 'macOS'"/>
  </Target>

  <Target Name="_PackageInspectorNuGetWin">
    <PropertyGroup>
      <InspectorClientFilesPath>Clients\Xamarin.Interactive.Client.Windows\bin\$(Configuration)\Inspector\</InspectorClientFilesPath>
      <!-- Add a parent folder since there's no app bundle like on Mac -->
      <InspectorNuGetPackageWindowsContentDir>$(InspectorNuGetPackageContentDir)\Xamarin.Inspector.Windows\</InspectorNuGetPackageWindowsContentDir>
    </PropertyGroup>
    <ItemGroup>
      <InspectorClientFiles
        Include="$(InspectorClientFilesPath)**\*"
        Exclude="$(InspectorClientFilesPath)*.pdb;$(InspectorClientFilesPath)*.xml"/>
    </ItemGroup>

    <Copy
      SkipUnchangedFiles="true"
      SourceFiles="@(InspectorClientFiles)"
      DestinationFolder="$(InspectorNuGetPackageWindowsContentDir)Client\%(RecursiveDir)"/>

    <Copy
      SkipUnchangedFiles="true"
      SourceFiles="@(AndroidAgentFiles)"
      DestinationFolder="$(InspectorNuGetPackageWindowsContentDir)Agents\Android"/>
    <Copy
      SkipUnchangedFiles="true"
      SourceFiles="@(iOSAgentFiles)"
      DestinationFolder="$(InspectorNuGetPackageWindowsContentDir)Agents\iOS"/>
    <Copy
      SkipUnchangedFiles="true"
      SourceFiles="@(WpfAgentFiles)"
      DestinationFolder="$(InspectorNuGetPackageWindowsContentDir)Agents\WPF"/>
    <Copy
      SkipUnchangedFiles="true"
      SourceFiles="@(AndroidFormsAgentFiles)"
      DestinationFolder="$(InspectorNuGetPackageWindowsContentDir)Agents\Forms\Android"/>
    <Copy
      SkipUnchangedFiles="true"
      SourceFiles="@(iOSFormsAgentFiles)"
      DestinationFolder="$(InspectorNuGetPackageWindowsContentDir)Agents\Forms\iOS"/>

    <CallTarget Targets="_DoPackageInspectorNuGet"/>
  </Target>

  <Target Name="_DoPackageInspectorNuGet">
    <PropertyGroup>
      <InspectorPackageFileName>$(InspectorPackageName).$(ReleaseVersion_SemVerNuGetSafe).nupkg</InspectorPackageFileName>
    </PropertyGroup>

    <Error Text="NuGet is not provisioned" Condition="!Exists('$(NuGet)')"/>
    <Copy
      SkipUnchangedFiles="true"
      SourceFiles="$(InspectorPackageNuspec)"
      DestinationFolder="$(InspectorNuGetPackageBuildDir)"/>
    <!-- Use SemVerNuGetSafe to get versions in the form of x.y.z-beta1-build.123 instead of x.y.z-beta1+123.
         NuGet does not support reading build numbers from semver metadata. -->
    <Exec
      Command="&quot;$(NuGet)&quot; pack $(InspectorPackageName).nuspec -Version $(ReleaseVersion_SemVerNuGetSafe) -NoPackageAnalysis"
      WorkingDirectory="$(InspectorNuGetPackageBuildDir)"/>
    <Copy
      SourceFiles="$(InspectorNuGetPackageBuildDir)\$(InspectorPackageFileName)"
      DestinationFiles="$(PackageOutputDir)\$(InspectorPackageFileName)"/>
  </Target>

  <Target Name="TestRegressions">
    <MSBuild
      Projects="CoreBuild.proj"
      Properties="$(MSBuildCommonProperties)"
      Targets="Test"/>
   </Target>

  <Target
    Name="TestInspectorInjector"
    Condition="'$(SolutionPlatform)' == 'macOS'">
    <MSBuild
      Projects="CoreBuild.proj"
      Properties="$(MSBuildCommonProperties)"
      Targets="TestInspectorInjector"/>
  </Target>

  <Target Name="UpdateBuildInfo">
    <MSBuild
      Projects="CoreBuild.proj"
      Targets="UpdateBuildInfo"/>
  </Target>

  <Target Name="UpdatePublicApiDefinitions">
    <MSBuild
      Projects="CoreBuild.proj"
      Targets="UpdatePublicApiDefinitions"/>
  </Target>

  <Target
    Name="UpdatePublicApiDocs"
    DependsOnTargets="UpdatePublicApiDefinitions">
    <Exec Command="mdoc update --delete Agents\Xamarin.Interactive\bin\Release\netstandard2.0\Xamarin.Interactive.dll -out Agents\Xamarin.Interactive\API\en -r /Library/Frameworks/Mono.framework/Versions/Current/lib/mono/4.5/Facades/netstandard.dll"/>
  </Target>

  <Target Name="AssemblePublicApiDocs">
    <Exec Command="mdoc assemble -o Agents\Xamarin.Interactive\API\interactive-api Agents\Xamarin.Interactive\API\en"/>
  </Target>

</Project>
