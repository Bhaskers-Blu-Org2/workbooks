<Project>
  <Target
    Name="UpdateInvertedDependencies"
    AfterTargets="Build">
    <ItemGroup>
      <Solution Include="$(MSBuildThisFileDirectory)..\*.sln"/>
    </ItemGroup>
    <ItemGroup>
      <NpmPackageJson Include="$(MSBuildThisFileDirectory)..\Clients\Xamarin.Interactive.Client\ClientApp\package.json"/>
      <NpmPackageJson Include="$(MSBuildThisFileDirectory)..\Clients\Xamarin.Interactive.Client.Web\package.json"/>
    </ItemGroup>
    <ItemGroup>
      <ExcludeProjectName Include="ApiDump"/>
      <ExcludeProjectName Include="ILFixer"/>
      <ExcludeProjectName Include="Xamarin.Build"/>
      <ExcludeProjectName Include="Xamarin.CITooling"/>
      <ExcludeProjectName Include="Xamarin.CrossBrowser.Generator"/>
      <ExcludeProjectName Include="Xamarin.Interactive.Tests"/>
      <ExcludeProjectName Include="Xamarin.Interactive.Tests.Android"/>
      <ExcludeProjectName Include="Xamarin.Interactive.Tests.InspectorSupport.Mac"/>
      <ExcludeProjectName Include="Xamarin.Interactive.Tests.Mac"/>
      <ExcludeProjectName Include="Xamarin.Interactive.Tests.Windows"/>
    </ItemGroup>
    <UpdateInvertedDependencies
      Solutions="@(Solution)"
      ExcludeProjectNames="@(ExcludeProjectName)"
      NpmPackageJson="@(NpmPackageJson)"
      OutputFile="$(MSBuildThisFileDirectory)..\dependencies.json"/>
  </Target>

  <Target
    Name="UpdateBuildInfo">
    <ItemGroup>
      <BuildInfoFile Include="UPDATES.md"/>
      <BuildInfoFile Include="RETHESIS"/>
      <BuildInfoFile Include="Agents\Xamarin.Interactive\BuildInfo.cs"/>
      <BuildInfoFile Include="build\ProductAssemblyInfo.cs"/>
      <BuildInfoFile Include="Clients\Xamarin.Interactive.Client.Mac\Info.plist"/>
      <BuildInfoFile Include="Clients\Xamarin.Interactive.Client.Windows\Properties\AssemblyInfo.cs"/>
      <BuildInfoFile Include="Agents\Xamarin.Interactive\Xamarin.Interactive.nuspec"/>
      <BuildInfoFile Include="Clients\Xamarin.Interactive.Client\Telemetry\Client.cs"/>
    </ItemGroup>
    <ItemGroup>
      <Replacement Include="0.0.0.0;@BUILD_SEMVER@">
        <Value>$(ReleaseVersion_SemVer)</Value>
      </Replacement>
      <Replacement Include="0.65.70.86">
        <Value>$(ReleaseVersion_WindowsFileVersion)</Value>
      </Replacement>
      <Replacement Include="0.1.2.3">
        <Value>$(ReleaseVersion_AppleCFBundleVersion)</Value>
      </Replacement>
      <Replacement Include="0.1.2">
        <Value>$(ReleaseVersion_AppleCFBundleShortVersion)</Value>
      </Replacement>
      <Replacement Include="@BUILD_DOCUMENTATION_VERSION@">
        <Value>$(ReleaseVersion_FriendlyLong)</Value>
      </Replacement>
      <Replacement Include="@PACKAGE_HEAD_REV@">
        <Value>$(CommonGitInfo_MaxRevisionLong)</Value>
      </Replacement>
      <Replacement Include="@PACKAGE_HEAD_REV_SHORT@">
        <Value>$(CommonGitInfo_MaxRevisionShort)</Value>
      </Replacement>
      <Replacement Include="@PACKAGE_HEAD_BRANCH@">
        <Value>$(BuildEnvironment_Branch)</Value>
      </Replacement>
      <Replacement Include="@PACKAGE_BUILD_HOST_LANE@">
        <Value>$(BuildEnvironment_DefinitionName)</Value>
      </Replacement>
      <Replacement Include="@PACKAGE_UPDATEINFO_VERSION@">
        <Value>$(ReleaseVersion_UpdateInfo)</Value>
      </Replacement>
      <Replacement Include="@PACKAGE_BUILD_DATE@">
        <Value>$([System.DateTime]::UtcNow.ToString('r'))</Value>
      </Replacement>
      <Replacement Include="@TELEMETRY_API_URL@">
        <Value>$(TELEMETRY_API_URL)</Value>
      </Replacement>
    </ItemGroup>
    <FindReplaceInFiles
      Files="@(BuildInfoFile)"
      Replacements="@(Replacement)"/>
  </Target>

  <Target
    Name="GeneratePublicationManifest">
    <PropertyGroup>
      <ProductName Condition="$(IsWindows)">Xamarin Workbooks &amp; Inspector (Win)</ProductName>
      <ProductName Condition="$(IsMac)">Xamarin Workbooks &amp; Inspector (Mac)</ProductName>
    </PropertyGroup>

    <ItemGroup>
      <PublicationItem Include="$(ArtifactsBasePath)*.pkg">
        <Evergreen Condition="'$(ReleaseVersion_CandidateLevel)' == 'Stable'">XamarinInteractive.pkg</Evergreen>
      </PublicationItem>
      <PublicationItem Include="$(ArtifactsBasePath)*.msi">
        <Evergreen Condition="'$(ReleaseVersion_CandidateLevel)' == 'Stable'">XamarinInteractive.msi</Evergreen>
      </PublicationItem>
      <PublicationItem Include="$(ArtifactsBasePath)*.html"/>
      <PublicationItem Remove="$(ArtifactsBasePath)Policheck*"/>
    </ItemGroup>

    <ReadLinesFromFile File="$(TopDirectory)RETHESIS">
      <Output TaskParameter="Lines" ItemName="UpdaterReleaseNotes"/>
    </ReadLinesFromFile>

    <GeneratePublicationManifest
      OutputFile="$(ArtifactsBasePath)publication-manifest.json"
      UpdateInfoFile="$(ArtifactsBasePath)updateinfo"
      ProductName="$(ProductName)"
      UpdaterReleaseNotes="@(UpdaterReleaseNotes)"
      FilesToInclude="@(PublicationItem)"
      BasePublishUri="https://dl.xamarin.com/interactive"
      ReleaseName="$([System.DateTime]::UtcNow.ToString('yyyy-MM-dd'))-interactive-$(ReleaseVersion_SemVer)"
      ReleaseDescription="Xamarin Workbooks &amp; Inspector $(ReleaseVersion_FriendlyLong)"/>
  </Target>

  <Target
    Name="GenerateSignFiles">
    <MakeDir Directories="$(ArtifactsBasePath)"/>
    <ItemGroup>
      <SignTarget Include="Agents\**\Xamarin*.dll"/>
      <SignTarget Include="Agents\**\*.exe"/>
      <SignTarget Include="Clients\**\Xamarin*.dll"/>
      <SignTarget Include="Clients\**\*.exe"/>
      <SignTarget Include="ClientIntegrations\**\Xamarin*.dll"/>
      <SignTarget Include="_build\$(Configuration)\WorkbookApps\**\Xamarin*.dll"/>
      <SignTarget Include="_build\$(Configuration)\WorkbookApps\**\*.exe"/>
      <SignTarget Include="workbooks-proprietary\ClientIntegrations\**\Xamarin*.dll"/>

      <SignTarget Remove="Agents\**\Xamarin.Forms*"/>
      <SignTarget Remove="Agents\**\Xamarin.Android*"/>
      <SignTarget Remove="Clients\**\Xamarin.Forms*"/>
      <SignTarget Remove="Clients\**\Xamarin.Android*"/>
      <SignTarget Remove="_build\$(Configuration)\WorkbookApps\**\Xamarin.Forms*"/>
      <SignTarget Remove="_build\$(Configuration)\WorkbookApps\**\Xamarin.Android*"/>
      <SignTarget Remove="workbooks-proprietary\**\Xamarin.Forms*"/>
      <SignTarget Remove="workbooks-proprietary\**\Xamarin.Android*"/>
    </ItemGroup>
    <PropertyGroup>
      <SignTargetPath>$(ArtifactsBasePath)sign-target.txt</SignTargetPath>
      <SignArchiveName>sign-$(CommongitInfo_MaxRevisionShort).zip</SignArchiveName>
    </PropertyGroup>
    <WriteLinesToFile Lines="@(SignTarget)" File="$(SignTargetPath)" Overwrite="true"/>
    <Exec Command="&quot;$(SevenZip)&quot; a &quot;$(SignArchiveName)&quot; %40$(SignTargetPath)" ConsoleToMSBuild="true" />
    <Message Importance="High" Text="##vso[task.setvariable variable=xamarin.interactive.authenticodeZipFile;]$(SignArchiveName)" />
  </Target>

  <Target Name="DownloadAndExtractSignedFile">
    <!-- $(xamarin.interactive.authenticodeStorageContainerUri)/to-sign/$(xamarin.interactive.authenticodeZipFile) -->
    <PropertyGroup>
      <SignArchiveName>sign-$(CommongitInfo_MaxRevisionShort).zip</SignArchiveName>
    </PropertyGroup>
    <Message Importance="High" Text="Downloading Authenticode-signed .zip from $(SignedArchiveName)" />
    <Error Text="Cannot download signed file, missing SignedArchiveName property." Condition=" '$(SignedArchiveName)' == '' " />

    <Exec Command="&quot;$(PowerShell)&quot; -Command &quot;&amp; { Invoke-WebRequest -UseBasicParsing -OutFile $(SignArchiveName) $(SignedArchiveName) }&quot;"
          Condition=" '$(SignedArchiveName)' != '' "/>
    <Exec Command="&quot;$(SevenZip)&quot; x -aoa $(SignArchiveName)" Condition=" Exists('$(SignArchiveName)') " />
  </Target>

  <Target Name="GeneratePolicheckInputFile">
    <ItemGroup>
      <PolicheckInput Include="Agents\**\*" />
      <PolicheckInput Include="Bootstrap\**\*" />
      <PolicheckInput Include="build\**\*" />
      <PolicheckInput Include="Clients\**\*" />
      <PolicheckInput Include="Package\**\*" />
      <PolicheckInput Include="Tests\**\*" />
      <PolicheckInput Include="Tools\**\*" />
      <PolicheckInput Include="WorkbookApps\**\*" />
      <PolicheckInput Include="README.md" />
      <PolicheckInput Include="RETHESIS" />
      <PolicheckInput Include="UPDATES.md" />
      <PolicheckInput Remove="build\_provisionator\**\*" />
      <PolicheckInput Remove="**\*.dll" />
      <PolicheckInput Remove="**\*.tlb" />
      <PolicheckInput Remove="**\*.png" />
      <PolicheckInput Remove="**\*.jpg" />
      <PolicheckInput Remove="**\*.dylib" />
      <PolicheckInput Remove="**\*.bmp" />
      <PolicheckInput Remove="**\*.ico" />
      <PolicheckInput Remove="**\*.g.*" />
      <PolicheckInput Remove="**\Lorem Ipsum.txt" />
      <PolicheckInput Remove="**\*.bin" />
      <PolicheckInput Remove="**\license.rtf" />
    </ItemGroup>
    <PropertyGroup>
      <PolicheckInputFile>$(TopDirectory)PolicheckInput.txt</PolicheckInputFile>
    </PropertyGroup>
    <WriteLinesTofile Lines="@(PolicheckInput)" File="$(PolicheckInputFile)" Overwrite="true" />
  </Target>

  <Target Name="ProcessPolicheckXml">
    <PropertyGroup>
      <PolicheckXml Condition=" '$(PolicheckXml)' == '' ">$(TopDirectory)Policheck.xml</PolicheckXml>
      <PolicheckOutputPath Condition=" '$(PolicheckOutputPath)' == '' ">$(TopDirectoryPolicheck.html</PolicheckOutputPath>
    </PropertyGroup>
    <ProcessPolicheckXml PolicheckXml="$(PolicheckXml)" OutputPath="$(PolicheckOutputPath)" />
  </Target>
</Project>